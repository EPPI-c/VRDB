name: Generate Issue Report on Close
on:
  issues:
    types: [closed]  # Se ejecutará cuando un issue sea cerrado
jobs:
  generate-md-file:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo A comment on issue $NUMBER
        env:
          NUMBER: ${{ github.event.issue.number }}
      - run: |
          echo A comment on body $input
        env:
          BODY: ${{ github.event.issue.body }}
          input: $BODY
      - run: |
          BODY="${{ github.event.issue.body }}"
          tag_steamvr="### Steamvr"
          
          # Filtrar el contenido y asignarlo a una variable
          content_steamvr=$(echo "$BODY" | sed -n "/$tag_steamvr/,/^###/{ /^###/d; p }")
          
          # Ruta al archivo
          file="${{ github.action_path }}/src/games/superhot-vr.md"
          
          # Eliminar la última línea (opcional según lo que necesites)
          sed -i '$ d' "$file"
          
          # Añadir el contenido filtrado al final del archivo
          echo -e "\n$content_steamvr" >> "$file"
          
          # Imprimir el archivo para confirmar los cambios
          cat "$file"
          
          # Configurar Git en GitHub Actions
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Añadir el archivo modificado al repositorio
          git add "$file"
          
          # Realizar un commit con un mensaje descriptivo
          git commit -m "Update superhot-vr.md with filtered content from issue"
          
          # Subir los cambios al repositorio
          git push


        shell: bash
